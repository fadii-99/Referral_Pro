# Generated by Django 5.2.5 on 2025-09-13 16:57

import django.db.models.deletion
import utils.storage_backends
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('seats', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('full_name', models.CharField(blank=True, max_length=150)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('image', models.ImageField(blank=True, null=True, storage=utils.storage_backends.MediaStorage(), upload_to='user_profiles/')),
                ('role', models.CharField(choices=[('solo', 'Solo'), ('rep', 'Company Rep'), ('company', 'Company'), ('superadmin', 'Super Admin')], default='solo', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_passwordSet', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('parent_company', models.ForeignKey(blank=True, limit_choices_to={'role': 'company'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('industry', models.CharField(max_length=100)),
                ('employees', models.CharField(max_length=50)),
                ('biz_type', models.CharField(max_length=50)),
                ('address1', models.CharField(max_length=255)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('post_code', models.CharField(max_length=20)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('us_state', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OtpCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('purpose', models.CharField(choices=[('login', 'Login'), ('reset_password', 'Reset Password'), ('signup', 'Signup'), ('verify_email', 'Verify Email'), ('verify_phone', 'Verify Phone')], max_length=50)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(default='Basic Plan', max_length=100)),
                ('subscription_type', models.CharField(choices=[('monthly', 'Monthly'), ('yearly', 'Yearly')], default='monthly', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('cancelled', 'Cancelled'), ('past_due', 'Past Due'), ('unpaid', 'Unpaid'), ('incomplete', 'Incomplete'), ('incomplete_expired', 'Incomplete Expired'), ('trialing', 'Trialing')], default='active', max_length=20)),
                ('seats_limit', models.PositiveIntegerField(default=1, help_text='Number of employees allowed')),
                ('seats_used', models.PositiveIntegerField(default=0, help_text='Current number of employees')),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_price_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_product_id', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('current_period_start', models.DateTimeField(blank=True, null=True)),
                ('current_period_end', models.DateTimeField(blank=True, null=True)),
                ('trial_start', models.DateTimeField(blank=True, null=True)),
                ('trial_end', models.DateTimeField(blank=True, null=True)),
                ('cancel_at_period_end', models.BooleanField(default=False)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('subscription', 'Subscription Payment'), ('one_time', 'One-time Payment'), ('refund', 'Refund'), ('upgrade', 'Plan Upgrade'), ('downgrade', 'Plan Downgrade')], default='subscription', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('canceled', 'Canceled'), ('requires_action', 'Requires Action'), ('requires_confirmation', 'Requires Confirmation'), ('requires_payment_method', 'Requires Payment Method'), ('processing', 'Processing'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=30)),
                ('payment_method', models.CharField(default='stripe', max_length=20)),
                ('payment_method_type', models.CharField(blank=True, help_text='card, bank_transfer, etc.', max_length=50, null=True)),
                ('card_brand', models.CharField(blank=True, help_text='visa, mastercard, etc.', max_length=20, null=True)),
                ('card_last4', models.CharField(blank=True, max_length=4, null=True)),
                ('card_exp_month', models.CharField(blank=True, max_length=2, null=True)),
                ('card_exp_year', models.CharField(blank=True, max_length=4, null=True)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_charge_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_invoice_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('receipt_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('receipt_url', models.URLField(blank=True, null=True)),
                ('failure_code', models.CharField(blank=True, max_length=100, null=True)),
                ('failure_message', models.TextField(blank=True, null=True)),
                ('refunded_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('refund_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_created_at', models.DateTimeField(blank=True, help_text='Transaction timestamp from Stripe', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='accounts.subscription')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]