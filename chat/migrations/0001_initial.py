# Generated by Django 5.2.5 on 2025-10-29 13:07

import django.db.models.deletion
import django.utils.timezone
import utils.storage_backends
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('referr', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_id', models.CharField(max_length=100, unique=True)),
                ('room_type', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('company_user', models.ForeignKey(limit_choices_to={'role': 'company'}, on_delete=django.db.models.deletion.CASCADE, related_name='company_chat_rooms', to=settings.AUTH_USER_MODEL)),
                ('referral', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_rooms', to='referr.referral')),
                ('rep_user', models.ForeignKey(blank=True, limit_choices_to={'role': 'rep'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rep_chat_rooms', to=settings.AUTH_USER_MODEL)),
                ('solo_user', models.ForeignKey(limit_choices_to={'role': 'solo'}, on_delete=django.db.models.deletion.CASCADE, related_name='solo_chat_rooms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
                'unique_together': {('referral', 'solo_user', 'company_user')},
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio/Voice'), ('document', 'Document'), ('file', 'File'), ('system', 'System Message')], default='text', max_length=10)),
                ('content', models.TextField(blank=True)),
                ('attachment', models.FileField(blank=True, null=True, storage=utils.storage_backends.MediaStorage(), upload_to='chat_files/')),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('thumbnail_url', models.URLField(blank=True, null=True)),
                ('dimensions', models.JSONField(blank=True, null=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chat_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.chatroom')),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='chat.message')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(storage=utils.storage_backends.MediaStorage(), upload_to='chat_files/')),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('file_type', models.CharField(max_length=100)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('thumbnail_url', models.URLField(blank=True, null=True)),
                ('dimensions', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_attachments', to='chat.message')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageReadStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_statuses', to='chat.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_reads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-read_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('referral.sent', 'Referral Sent'), ('referral.accepted', 'Referral Accepted'), ('referral.rejected', 'Referral Rejected'), ('referral.completed', 'Referral Completed'), ('chat.new_message', 'New Chat Message'), ('system.update', 'System Update'), ('reward.earned', 'Reward Earned'), ('payment.processed', 'Payment Processed')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_delivered', models.BooleanField(default=False)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('meta_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('actor_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triggered_notifications', to=settings.AUTH_USER_MODEL)),
                ('chat_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='chat.message')),
                ('chat_room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='chat.chatroom')),
                ('referral', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='referr.referral')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('primary', 'Primary Participant'), ('observer', 'Observer')], default='primary', max_length=10)),
                ('can_send_messages', models.BooleanField(default=True)),
                ('can_view_history', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_seen_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_online', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_participations', to=settings.AUTH_USER_MODEL)),
                ('chat_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='chat.chatroom')),
            ],
            options={
                'ordering': ['-joined_at'],
                'unique_together': {('chat_room', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['chat_room', '-created_at'], name='chat_messag_chat_ro_16abb8_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', '-created_at'], name='chat_messag_sender__62c9f9_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['message_type'], name='chat_messag_message_973666_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messagereadstatus',
            unique_together={('message', 'user')},
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', '-created_at'], name='chat_notifi_user_id_067519_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read'], name='chat_notifi_user_id_7c95fc_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['event_type'], name='chat_notifi_event_t_a84868_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='chat_notifi_created_6465bb_idx'),
        ),
    ]
